name: SAME Program Deployment

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install SAME Client and Setup credentials
        run: |
          curl -L0 https://get.sameproject.org | bash -
          source $HOME/.bashrc
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_SECRET" > $HOME/.kube/config
          cat $HOME/.kube/config
          mkdir -p $HOME/.same
          touch $HOME/.same/config
          echo "activecontext: " >> $HOME/.same/config.yaml
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          mkdir -p $HOME/.local/bin/kubectl
          mv ./kubectl $HOME/.local/bin/kubectl
          export PATH=$PATH:$HOME/.local/bin/kubectl
          echo "export KUBECONFIG=$HOME/.kube/config" >> $HOME/.bashrc
          export KUBECONFIG=$HOME/.kube/config
        env: # Set the secret as an input
          kubeconfig_secret: ${{ secrets.KUBECONFIG }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Debugging with tmate
        uses: mxschmitt/action-tmate@v3.5
        env: # Set the secret as an input
          kubeconfig_secret: ${{ secrets.KUBECONFIG }}
      - name: Install KFP SDK for KFP DSL Compile tool
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Deploy & Run SAME Program
        run: |
          same program run --experiment-name "${{ github.repository }}" --run-name "RELEASE-${{ env.RELEASE_VERSION }}" --run-param=sha=${{ github.sha }} --run-param=keyvault_url=$KEYVAULT_URL --run-param=keyvault_credentials_b64=$KEYVAULT_CREDENTIALS_B64 --run-param=connection_string_secret_name=$CONNECTION_STRING_SECRET_NAME
        env:
          KUBECONFIG: $HOME/.kube/config
          KEYVAULT_URL: ${{ secrets.KEYVAULT_URL }}
          CONNECTION_STRING_SECRET_NAME: ${{ secrets.CONNECTION_STRING_SECRET_NAME }}
          KEYVAULT_CREDENTIALS_B64: ${{ secrets.KEYVAULT_CREDENTIALS_B64 }}
